package net.anotheria.portalkit.services.authentication.encryptors;

import net.anotheria.portalkit.services.authentication.AuthToken;
import net.anotheria.portalkit.services.common.AccountId;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * TODO comment this class
 *
 * @author lrosenberg
 * @since 29.01.13 10:52
 */
public class BlowfishAuthTokenEncryptionAlgorithmTest {
	@Test
	public void testEncryptDecrypt(){
		AuthToken token = new AuthToken();

		AccountId acc = AccountId.generateNew();
		token.setAccountId(acc);
		token.setType(42);
		token.setExclusive(true);
		token.setExclusiveInType(true);

		BlowfishAuthTokenEncryptionAlgorithm alg = new BlowfishAuthTokenEncryptionAlgorithm();
		alg.customize("ABCDEFGHIJKLMN");

		String encrypted = alg.encryptAuthToken(token);
		AuthToken token2 = alg.decryptAuthToken(encrypted);

		assertEquals(token, token2);

	}

	@Test public void testForBaldur(){
		String token1 = "4F4C74090726DA1A3A0DC951A29B3D655AADEC3E84A1D8D4EEEAEFD259F57BBD82B5C0FD934064777F6FDA5C653BE1755F68CE10CE37D1445877242DF55EF0BCD0760F00079DB21CADBB6035DD14DBEBD1B922F0E9C69D4E3FADE14314B418A18A72022082D863F68F452A311E9A279FAC61641FE58EED6";
		String token2 = "4F4C74090726DA1A3A0DC951A29B3D65610CECBA17B8C0EBD58AC60666F0F2B6F54E5FB1B421A09FAF1C5A1E6CD61A65349266BBA68C5BEF63D9DC8F31F84FE7FC0E6EFA39465B667DDEC541372432D95D7990EAF97A9486995E6637C73FB91D7C937C8C71867991053BFA81A6BBDC25C44A5AF15898D78";
		String token3 = "4F4C74090726DA1A3A0DC951A29B3D655AADEC3E84A1D8D4EEEAEFD259F57BBD82B5C0FD934064777F6FDA5C653BE1755F68CE10CE37D1445877242DF55EF0BCD0760F00079DB21CADBB6035DD14DBEBD1B922F0E9C69D4E3FADE14314B418A18A72022082D863F68F452A311E9A279FAC61641FE58EED6";
		String token4 = "4F4C74090726DA1A3A0DC951A29B3D65610CECBA17B8C0EBD58AC60666F0F2B6F54E5FB1B421A09FAF1C5A1E6CD61A65349266BBA68C5BEF63D9DC8F31F84FE07FC0E6EFA39465B667DDEC541372432D95D7990EAF97A9486995E6637C73FB91D7C937C8C71867991053BFA81A6BBDC25C44A5AF15898D78";
		String token5 = "4F4C74090726DA1A3A0DC951A29B3D6500ECCF9CF0CBC3DF17FC2059CCC9F1F472CCC3F8744853539F0FD93DE4D253EB15E643C3EDAFF4535877242DF55EF0BACD0760F00079DB21CADBB6035DD14DBE873CCEC65E50C538B189049C51E8DC4206F2C86027039AFCCB0A1EE23FEC15A6F3D7EE6594A20663";
		String token6 = "DBD9FF86957D7D213A0DC951A29B3D650A7A22E18889882F3BB7BB107C486CB6DD28D7C70847487FBB79D1E59AB6E6A4C4F02BA8D5126A213316F92B3BA851D9EA51E1030A92F894406F00FBA0E85D6E379D396F90E001AA02F00B4675D34BE75C4A560C559323C1FE37B0D5FFA5A2C9CF0A06C0C786C550";
		String token7 = "DBD9FF86957D7D213A0DC951A29B3D650A7A22E18889882F3BB7BB107C486CB6DD28D7C70847487FBB79D1E59AB6E6A4C4F02BA8D5126A213316F92B3BA851D9EA51E1030A92F894406F00FBA0E85D6E379D396F90E001AA02F00B4675D34BE75C4A560C559323C1FE37B0D5FFA5A2C9CF0A06C0C786C550";


		BlowfishAuthTokenEncryptionAlgorithm alg = new BlowfishAuthTokenEncryptionAlgorithm();
		alg.customize("PORTALKITFORBLOWFISH");
		System.out.println(token1.length());
		System.out.println(token2.length());
		System.out.println(token3.length());
		System.out.println(token4.length());
		System.out.println(token6.length());
		System.out.println(alg.decryptAuthToken(token6));
		AuthToken at = alg.decryptAuthToken(token6);
		System.out.println(System.currentTimeMillis());
		System.out.println("--- expired? "+at.isExpired());
		System.out.println(System.currentTimeMillis()-at.getExpiryTimestamp());

	}
}
